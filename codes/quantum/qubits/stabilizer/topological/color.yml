#######################################################
## This is a code entry in the error correction zoo. ##
##       https://github.com/errorcorrectionzoo       ##
#######################################################

code_id: color
physical: qubits
logical: qubits

name: 'Color code'
introduced: '\cite{arxiv:quant-ph/0605138}'

description: 'A family of abelian topological \hyperref[code:css]{CSS stabilizer} codes defined on a \(D\)-dimensional lattice which satisfies two properties: The lattice is (1) a homogeneous simplicial \(D\)-complex obtained as a triangulation of the interior of a \(D\)-simplex and (2) is \(D+1\)-colorable. Qubits are placed on the \(D\)-simplices and generators are supported on suitable simplices \cite{doi:10.7907/059V-MG69}. For 2-dimensional color code, the lattice must be such that it is 3-valent and has 3-colorable faces, such as a honeycomb lattice. The qubits are placed on the vertices and two stabilizer generators are placed on each face \cite{arXiv:1311.0277}.'

protection: 'As with the surface code, the code distance depends on the specific kind of lattice used to define the code. More precisely, the distance depends on the homology of logical string operators \cite{arXiv:1311.0277}.'

features:
  rate: 'For general 2D manifolds, \(kd^2 \leq c(\log k)^2 n\) for some constant \(c\) \cite{arXiv:1301.6588}, meaning that color codes with finite rate can only achieve an asymptotic minimum distance that is logarithmic in \(n\).'

  transversal_gates: 'Transversal CNOT can be implemented via braiding \cite{arXiv:0806.4827}. Universal transversal gates can be achieved in 3D color code using gauge fixing \cite{arxiv:1311.0879}, lattice surgery \cite{arXiv:1407.5103}, or code deformation \cite{doi:10.1088/1367-2630/13/4/043005,arXiv:0806.4827}.'

  general_gates:
    - 'Magic-state distillation protocols \cite{doi:10.7907/059V-MG69}.'
    - 'Non-clifford gates can be implemented via code switching \cite{doi:10.7907/059V-MG69}.'
    - 'Lattice surgery scheme for 2D layout yields lower resource overhead when compared to analogous surface code scheme \cite{arXiv:2201.07806}.'

  decoders:
    - 'Projection decoder \cite{doi:10.7907/059V-MG69}.'
    - 'Matching decoder gives low logical failure rate \cite{arXiv:2108.11395}.'
    - 'Integer-program-based decoder \cite{arXiv:1402.3037}.'
    - 'Restriction decoder \cite{doi:10.1088/1367-2630/ab68fd}.'
    - 'Cellular-automaton decoder for the \(XYZ\) color code \cite{arxiv:2203.16534}.'
    - 'MaxSAT-based decoder \cite{arxiv:2303.14237}.'
#    - 'Flag fault-tolerant protocols for distance-nine 2D color codes \cite{}.'

  fault_tolerance:
    - 'Clifford gates can be performed fault-tolerantly on a suitable 2D lattice \cite{arxiv:quant-ph/0605138}.'
    - 'Steane''s ancilla-coupled measurement method \cite{arXiv:1407.5103}'
    - 'Gauge fixing can be used to switch between 2D and 3D color codes, thereby yielding fault-tolerant with constant time overhead using only local quantum operations \cite{arxiv:1412.5079}.'

  code_capacity_threshold:
    - '\(12.6\%\) threshold for triangular color code with the restriction decoder \cite{arXiv:1911.00355}.'
    - '\(12.6\%\) threshold for triangular color code with the projection decoder (\cite{arXiv:1308.6207}) \cite{arXiv:1802.08680}'
    - '\(8.7\%\) threshold for phase errors for the hexagonal color code with the projection decoder \cite{arXiv:1308.6207}'
    - '\(\geq 6\%\) threshold with rescaling-based decoder \cite{arXiv:2112.09584}.'


  threshold:
    - '\(\geq 6.25\%\) threshold for 2D color codes with error-free syndrome extraction, and \(0.1\%\) with faulty syndrome extraction \cite{arXiv:0907.1708}.'
    - '\(0.46\%\) for 3D codes with clustering decoder \cite{arXiv:1708.07131}.'
    - '\(1.9\%\) for 1D string-like logical operators and \(27.6\%\) for 2D sheet-like operators for 3D codes with noise models using optimal decoding and perfect measurements \cite{arXiv:1708.07131}.'
    - '\(0.31\%\) noise threshold error rate for gauge code using clustering decoder \cite{arXiv:1503.08217}.'
    - '\(0.2\%\) with depolarizing circuit-level noise using two flag-qubits per stabilizer generator and the restriction decoder \cite{arXiv:1911.00355}.'
    - '\(0.143\%\) with depolarizing circuit-level noise using perfect-matching decoder \cite{arXiv:1407.5103}.'
    - '\(>0\%\) threshold with sweep decoder \cite{doi:10.7907/059V-MG69}.'


#realizations:

relations:
  parents:
    - code_id: qubit_css
    - code_id: generalized_color
      detail: 'The generalized color code for \(G=\mathbb{Z}_2\) reduces to the color code.'
    - code_id: quantum_double_abelian
      detail: 'When treated as ground states of the code Hamiltonian, color code states on realize \(\mathbb{Z}_2\times\mathbb{Z}_2\) topological order \cite{arxiv:0906.4127}, equivalent to the phase realized by two copies of the surface code \cite{arxiv:1503.02065}.'
  cousins:
    - code_id: galois_topological
      detail: 'The 2D color code has been extended to Galois qudits.'
    - code_id: surface
      detail: 'The 3D color code is equivalent to multiple decoupled copies of the 2D surface code \cite{arxiv:1007.4601,arxiv:1503.02065,arXiv:1804.00866}.
      Conversely, the 2D color code can \hyperref[topic:code-switching]{condense} to form the 2D surface code in nine different ways, i.e., by adding two body hopping terms along one of its three hexagonal directions to the stabilizer group and then taking the center of the resulting nonabelian group \cite{arxiv:2212.00042}.'
    - code_id: higher_dimensional_surface
      detail: 'The color code on a \(D\)-dimensional closed manifold is equivalent to multiple decoupled copies of the \(D-1\)-dimensional surface code \cite{arxiv:1007.4601,arxiv:1503.02065,arXiv:1804.00866}.'
    - code_id: quantum_triorthogonal
      detail: 'The 3D color code is triorthogonal.'
    - code_id: hexagonal
      detail: 'The 2D color code is defined on a trivalent lattice such as the honeycomb lattice.'


# Begin Entry Meta Information
_meta:
  # Change log - most recent first
  changelog:
    - user_id: balopat
      date: '2023-01-11'
    - user_id: VictorVAlbert
      date: '2022-01-05'
    - user_id: XiaozhenFu
      date: '2021-12-12'
